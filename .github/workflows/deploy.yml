name: Deploy Strapi

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: strapi-azfa

    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Crear archivo PEM temporal
        run: |
          echo "${{ secrets.SSH_PEM_KEY }}" > azfa-rds.pem
          chmod 600 azfa-rds.pem
          echo "📁 Archivo PEM creado:"
          ls -la azfa-rds.pem
          echo "📄 Primeras líneas del archivo PEM:"
          head -3 azfa-rds.pem

      - name: Generar llave pública desde PEM
        run: |
          ssh-keygen -y -f azfa-rds.pem > azfa-rds.pub
          chmod 644 azfa-rds.pub
          echo "🔑 Llave pública generada:"
          ls -la azfa-rds.pub
          echo "📋 Contenido de la llave pública:"
          cat azfa-rds.pub

      - name: Copiar llave al servidor
        run: |
          ssh -i azfa-rds.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ubuntu@18.212.160.100 'mkdir -p ~/.ssh && echo "'"$(cat azfa-rds.pub)"'" >> ~/.ssh/authorized_keys && chmod 600 ~/.ssh/authorized_keys'

      - name: Limpiar archivos temporales
        if: always()
        run: |
          rm -f azfa-rds.pem azfa-rds.pub

      - name: Verificar conexión SSH
        run: |
          echo "🔍 Verificando que la conexión SSH funcione..."
          ssh -i azfa-rds.pem -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=10 ubuntu@18.212.160.100 'echo "✅ Conexión SSH exitosa"'

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Instalar dependencias
        run: npm ci

      - name: Build de Strapi
        run: npm run build

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          timeout: 300s
          command_timeout: 300s
          script: |
            set -e
            
            echo "🚀 Iniciando deployment..."
            
            # Navegar al directorio del proyecto
            cd ~/azfa-cms-strapi
            
            # Hacer stash de cambios locales si existen
            if ! git diff-index --quiet HEAD --; then
              echo "⚠️  Cambios locales detectados, haciendo stash..."
              git stash push -m "Auto-stash before deployment $(date)"
            fi
            
            # Actualizar código
            echo "📥 Actualizando código desde repositorio..."
            git fetch origin
            git reset --hard origin/main
            
            echo "📦 Instalando dependencias..."
            npm ci --production --silent
            
            # Build con límite de memoria
            echo "🔨 Construyendo aplicación..."
            NODE_OPTIONS="--max-old-space-size=4096" npm run build
            
            # Verificar configuración del .env
            echo "🔍 Verificando configuración..."
            if [ -f .env ]; then
              echo "✅ Archivo .env encontrado"
              echo "📋 Contenido del .env:"
              cat .env
            else
              echo "❌ Archivo .env no encontrado"
            fi
            
            # Buscar PM2 dinámicamente (más confiable)
            echo "🔍 Buscando PM2..."
            PM2_PATH=""
            
            # Intentar múltiples formas de encontrar PM2
            if command -v pm2 >/dev/null 2>&1; then
                PM2_PATH="pm2"
                echo "✅ PM2 encontrado en PATH"
            elif [ -x "/usr/local/bin/pm2" ]; then
                PM2_PATH="/usr/local/bin/pm2"
                echo "✅ PM2 encontrado en /usr/local/bin/pm2"
            elif [ -x "$HOME/.npm-global/bin/pm2" ]; then
                PM2_PATH="$HOME/.npm-global/bin/pm2"
                echo "✅ PM2 encontrado en ~/.npm-global/bin/pm2"
            else
                # Buscar en ubicaciones comunes
                for path in /usr/bin/pm2 /usr/local/lib/node_modules/pm2/bin/pm2 "$HOME/node_modules/.bin/pm2"; do
                    if [ -x "$path" ]; then
                        PM2_PATH="$path"
                        echo "✅ PM2 encontrado en $path"
                        break
                    fi
                done
            fi
            
            # Si no se encuentra, instalar
            if [ -z "$PM2_PATH" ]; then
                echo "❌ PM2 no encontrado, instalando..."
                npm install -g pm2@latest
                PM2_PATH="pm2"
            fi
            
            # Verificar que PM2 funcione
            echo "🔧 Verificando PM2..."
            "$PM2_PATH" --version
            
            # Manejar PM2 - reiniciar o iniciar
            echo "🔄 Gestionando proceso PM2..."
            if "$PM2_PATH" describe strapi > /dev/null 2>&1; then
              echo "♻️  Reiniciando aplicación existente..."
              "$PM2_PATH" restart strapi
            else
              echo "🆕 Iniciando nueva aplicación..."
              # Configurar para escuchar en todas las interfaces (0.0.0.0)
              "$PM2_PATH" start npm --name "strapi" -- run start -- --host 0.0.0.0 --port 1337
            fi
            
            # Guardar configuración de PM2
            "$PM2_PATH" save
            
            # Verificar estado
            echo "✅ Estado final de PM2:"
            "$PM2_PATH" list
            
            echo "🎉 Deployment completado exitosamente!"

      - name: Verificar deployment
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            echo "🔍 Verificando que la aplicación esté corriendo..."
            sleep 10
            
            # Buscar PM2 dinámicamente
            PM2_PATH=""
            if command -v pm2 >/dev/null 2>&1; then
                PM2_PATH="pm2"
            elif [ -x "/usr/local/bin/pm2" ]; then
                PM2_PATH="/usr/local/bin/pm2"
            elif [ -x "$HOME/.npm-global/bin/pm2" ]; then
                PM2_PATH="$HOME/.npm-global/bin/pm2"
            else
                for path in /usr/bin/pm2 /usr/local/lib/node_modules/pm2/bin/pm2 "$HOME/node_modules/.bin/pm2"; do
                    if [ -x "$path" ]; then
                        PM2_PATH="$path"
                        break
                    fi
                done
            fi
            
            if [ -n "$PM2_PATH" ]; then
                cd ~/azfa-cms-strapi
                "$PM2_PATH" show strapi
                
                # Verificar logs recientes
                echo "📋 Últimos logs:"
                "$PM2_PATH" logs strapi --lines 10 --nostream || true
            else
                echo "❌ No se pudo encontrar PM2 para verificación"
                exit 1
            fi
            
            # Opcional: verificar que el puerto responda
            if command -v curl &> /dev/null; then
              echo "🌐 Verificando respuesta HTTP..."
              sleep 5
              curl -f http://localhost:1337/admin -I || echo "⚠️  La aplicación puede estar iniciando..."
            fi